{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","features/user.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","initialState","status","filterReducer","addTodos","todos","todosReducer","user","userReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoItem","title","completed","id","dispatch","className","classNames","onClick","currentTodoActions","TodoList","length","map","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","filterActions","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","isLoding","setIsLoading","useEffect","fetchUser","a","userId","userFromServer","userActions","Error","curretTodoActions","href","email","name","App","isLoadingTodos","setIsLoadingTodos","fetchData","todosFromServer","filteredTodos","toLowerCase","includes","getFilteredTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1d1bacc.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type SetAllFilter = { type: 'filter/ALL' };\ntype SetActiveFilter = { type: 'filter/ACTIVE' };\ntype SetCompletedFilter = { type: 'filter/COMPLETED' };\ntype SetQuery = { type: 'query/SET', payload: string };\ntype RemoveQuery = { type: 'query/REMOVE' };\n\ntype Actions = SetAllFilter\n| SetActiveFilter\n| SetCompletedFilter\n| SetQuery\n| RemoveQuery;\n\nconst getAllTodos = (): SetAllFilter => (\n  { type: 'filter/ALL' }\n);\n\nconst getActiveTodos = (): SetActiveFilter => (\n  { type: 'filter/ACTIVE' }\n);\n\nconst getCompletedTodos = (): SetCompletedFilter => (\n  { type: 'filter/COMPLETED' }\n);\n\nconst setQuery = (query: string): SetQuery => (\n  { type: 'query/SET', payload: query }\n);\nconst removeQuery = (): RemoveQuery => ({ type: 'query/REMOVE' });\n\nexport const actions = {\n  getAllTodos,\n  getActiveTodos,\n  getCompletedTodos,\n  setQuery,\n  removeQuery,\n};\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\ntype State = {\n  query: string,\n  status: string,\n};\n\nconst filterReducer = (state: State = initialState, action: Actions): State => {\n  switch (action.type) {\n    case 'filter/ALL':\n      return { ...state, status: 'all' };\n\n    case 'filter/ACTIVE':\n      return { ...state, status: 'active' };\n\n    case 'filter/COMPLETED':\n      return { ...state, status: 'completed' };\n\n    case 'query/SET':\n      return { ...state, query: action.payload };\n\n    case 'query/REMOVE':\n      return { ...state, query: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nexport type AddTodosAction = { type: 'todos/ADD', payload: Todo[] };\n\nexport const addTodos = (todos: Todo []) => (\n  { type: 'todos/ADD', payload: todos }\n);\n\ntype StateType = Todo[] | [];\n\nconst todosReducer = (\n  state: StateType = [],\n  action: AddTodosAction,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { User } from '../types/User';\n\ntype SetUserAction = { type: 'user/SET', payload: User };\ntype RemoveUserAction = { type: 'user/REMOVE' };\n\ntype State = User | null;\ntype Action = SetUserAction | RemoveUserAction;\n\nconst setUser = (user: User) => ({ type: 'user/SET', payload: user });\nconst removeUser = () => ({ type: 'user/REMOVE' });\n\nexport const actions = { setUser, removeUser };\n\nconst userReducer = (state: State = null, action: Action): State => {\n  switch (action.type) {\n    case 'user/SET':\n      return action.payload;\n\n    case 'user/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\nimport userReducer from '../features/user';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n  user: userReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoItemState = {\n  todo: Todo,\n};\n\nexport const TodoItem: FC<TodoItemState> = ({ todo }) => {\n  const { title, completed, id } = todo;\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames(\n        '',\n        { 'has-background-info-light': id === currentTodo?.id },\n      )}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames('', {\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far',\n              {\n                'fa-eye-slash': currentTodo?.id === id,\n                'fa-eye': currentTodo?.id !== id,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype TodoListState = {\n  todos: Todo [] | [],\n};\n\nexport const TodoList: React.FC<TodoListState> = ({ todos }) => {\n  const { filter } = useAppSelector(state => state);\n\n  return (\n    <>\n      {filter.query && todos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <TodoItem todo={todo} key={todo.id} />\n            ))}\n          </tbody>\n        </table>\n      )}\n\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { status, query } = useAppSelector(state => state.filter);\n  const handlerChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.target.value));\n  };\n\n  const handlerStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'all':\n        dispatch(filterActions.getAllTodos());\n        break;\n\n      case 'active':\n        dispatch(filterActions.getActiveTodos());\n        break;\n\n      case 'completed':\n        dispatch(filterActions.getCompletedTodos());\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handlerStatusSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handlerChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Delete\"\n              onClick={() => dispatch(filterActions.setQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as curretTodoActions } from '../../features/currentTodo';\nimport { actions as userActions } from '../../features/user';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const user = useAppSelector(state => state.user);\n\n  const [isLoding, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        setIsLoading(true);\n        const userFromServer = await getUser(currentTodo?.userId as number);\n\n        dispatch(userActions.setUser(userFromServer));\n      } catch {\n        throw new Error('Failed to load user');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoding ? <Loader /> : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Delete\"\n              onClick={() => dispatch(curretTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { addTodos } from './features/todos';\nimport { Todo } from './types/Todo';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { todos, filter } = useAppSelector(state => state);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoadingTodos, setIsLoadingTodos] = useState<boolean>(false);\n\n  const getFilteredTodos = () => {\n    let filteredTodos = [...todos];\n\n    switch (filter.status) {\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    if (filter.query) {\n      filteredTodos = filteredTodos\n        .filter(todo => todo.title.toLowerCase()\n          .includes(filter.query.toLowerCase()));\n    }\n\n    return filteredTodos;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoadingTodos(true);\n        const todosFromServer: Todo[] = await getTodos();\n\n        dispatch(addTodos(todosFromServer));\n      } catch {\n        throw new Error('Failed to load todos from server');\n      } finally {\n        setIsLoadingTodos(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos ? <Loader />\n                : (<TodoList todos={getFilteredTodos()} />)}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}